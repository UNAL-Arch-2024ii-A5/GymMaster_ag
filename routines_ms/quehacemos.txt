Enfoque de uso de auth
🔹 Opción 1: Autenticación en el API Gateway
📌 El API Gateway valida el token ANTES de redirigir la solicitud a los MS.
📌 Los MS confían en el API Gateway y no vuelven a validar el token.
📌 Menos tráfico entre los MS, pero el API Gateway se convierte en un cuello de botella si recibe muchas solicitudes.

1️⃣ ¿Cómo Funciona Este Enfoque?
1️⃣ El cliente (frontend) envía una petición con el token al API Gateway.
2️⃣ El API Gateway valida el token con auth_ms.
3️⃣ Si el token es válido, el API Gateway agrega los datos del usuario en el context de GraphQL.
4️⃣ Los resolvers de GraphQL ya reciben los datos del usuario, por lo que los MS NO necesitan validar autenticación.
5️⃣ El API Gateway reenvía la solicitud con la información del usuario a los MS.

📌 Resumen Final de Seguridad y Autenticación en routines_ms
Hemos configurado routines_ms para que dependa completamente del API Gateway para autenticación y permisos.

✅ El API Gateway valida el token antes de reenviar solicitudes a routines_ms.
✅ Los microservicios confían en el API Gateway y ya no validan autenticación por sí mismos.
✅ Los roles (admin, coach, user) definen qué acciones puede realizar cada usuario.

📌 1️⃣ Reglas de Autenticación y Permisos
Acción	Quién puede hacerla?	Validación en queries.js o mutations.js?
Ver todos los ejercicios (allExercises)	Cualquier usuario autenticado	✅ context.user requerido en queries.js
Ver un ejercicio (getExercise)	Cualquier usuario autenticado	✅ context.user requerido en queries.js
Ver todas las rutinas (allRoutines)	Cualquier usuario autenticado	✅ context.user requerido en queries.js
Ver una rutina (getRoutine)	Cualquier usuario autenticado	✅ context.user requerido en queries.js
Crear un ejercicio (createExercise)	Solo admin y coach	✅ `role === "admin"
Actualizar un ejercicio (updateExercise)	Solo admin y coach	✅ `role === "admin"
Eliminar un ejercicio (deleteExercise)	Solo admin y coach	✅ `role === "admin"
Crear una rutina (createRoutine)	Solo admin y coach	✅ `role === "admin"
Actualizar una rutina (updateRoutine)	Solo admin y coach	✅ `role === "admin"
Eliminar una rutina (deleteRoutine)	Solo admin y coach	✅ `role === "admin"
Cambio	Explicación
Los usuarios deben estar autenticados para ver ejercicios y rutinas.	Se verifica context.user en queries.js.
No se necesita verificar role en consultas.	Todos los usuarios autenticados pueden consultar.
Las mutaciones ya tienen verificación de role.	Solo admin y coach pueden modificar ejercicios y rutinas.
✅ ¡Ahora el MS de Rutinas exige autenticación para consultas y mantiene permisos en mutaciones! 🚀